[build-system]
requires = [
    "setuptools",
    "setuptools_scm[toml]",
]
build-backend = "setuptools.build_meta"

[project]
name = "daemonizer"
description = "Python daemonizer for Unix, Linux and OS X"
dynamic = ["version"]
readme = "README.rst"
license = "CC-BY-SA-3.0"  # >=3.9 only

authors = [
    {name = "Stephen Arnold"},
    {email = "stephen.arnold42@gmail.com"},
]

keywords = ["daemon", "daemonize", "server"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Operating System :: Unix",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Testing",
    "Environment :: No Input/Output (Daemon)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

# dependencies = []

requires-python = ">=3.9"

[project.optional-dependencies]
dev = [
    "flake8",
    "isort",
    "mypy>=0.990",
    "black >= 22.3.0",
    "pylint >= 3.1.0",
]
cov = [
    "coverage[toml]",
    "coverage_python_version",
]
doc = [
    "sphinx",
    "sphinx_git",
    "sphinxcontrib.apidoc",
    "myst-parser",
    "sphinx-nefertiti",
    "sphinx_rtd_theme<3.0.0",
]
test = [
    "pytest",
    "pytest-cov",
]
events = [
    "gevent",
    "eventlet",
]

[project.urls]
Homepage = "https://github.com/sarnold/python-daemonizer"
Repository = "https://github.com/sarnold/python-daemonizer.git"
Issues = "https://github.com/sarnold/python-daemonizer/issues"
Changelog = "https://github.com/sarnold/python-daemonizer/blob/master/CHANGELOG.rst"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
version_file = "src/daemonizer/_version.py"

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["test",]
log_cli =  false
doctest_optionflags = ["ELLIPSIS", "NORMALIZE_WHITESPACE",]
addopts = "--strict-markers"
markers = "subscript"
filterwarnings = [
    "ignore:currentThread:DeprecationWarning",
    "ignore:co_lnotab:DeprecationWarning",
]

[tool.coverage.run]
branch = true
source = ["src"]
omit = [
    "test",
    ".tox",
]
plugins = [
    "coverage_python_version"
]

[tool.coverage.paths]
source = ["src"]

[tool.coverage.report]
fail_under = 70
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "raise AssertionError",
    "if typing.TYPE_CHECKING:",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 90
skip-string-normalization = true
include = '\.py$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | docs
  | dist
  | test
)/
'''

[tool.pycln]
all = true

[tool.isort]
line_length = 72
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.bandit]
exclude_dirs = ["docs", "test"]
#skips = ["B603", "B404"]
